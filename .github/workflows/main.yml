name: CI

on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  version:
    if: false
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        container: ["fedora:39", "fedora:40", "ubuntu:jammy"]
    steps:
      - name: Check container sha tags
        run: |
          docker pull "${{ matrix.container }}"
          docker inspect "${{ matrix.container }}" --format=${{ '{{.RepoDigests}}{{.Created}}' }}


  build:
    if: false
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - container: fedora:39
            ucd_dir: /usr/share/unicode/ucd
          - container: fedora:39
            ucd_dir: /usr/share/unicode/ucd
            test_config: '--disable-wayland'
          - container: fedora:39
            ucd_dir: /usr/share/unicode/ucd
            test_config: '--disable-appindicator'
          - container: fedora:40
            ucd_dir: /usr/share/unicode/ucd
          - container: ubuntu:jammy
            ucd_dir: /usr/share/unicode

    container:
      image: ${{ matrix.container }}

    steps:
      - name: Install distro packages
        env:
         # For autogen.sh
         UBUNTU_PACKAGES_AUTOGEN: >
           autopoint
           strace
         # For make from
         # https://packages.ubuntu.com/search?searchon=sourcenames&keywords=ibus
         UBUNTU_PACKAGES_MAKE: >
           desktop-file-utils
           dbus-x11
           gobject-introspection
           gtk-doc-tools
           iso-codes
           libdconf-dev
           libdbusmenu-gtk3-dev
           libgirepository1.0-dev
           libglib2.0-dev
           libgtk-3-bin
           libgtk-3-dev
           libgtk-4-dev
           libgtk2.0-dev
           libnotify-dev
           libtool
           libwayland-dev
           python-gi-dev
           python3-all
           systemd
           unicode-cldr-core
           unicode-data
           valac
         FEDORA_PACKAGES_MAKE: >
           cldr-emoji-annotation
           dbus-glib-devel
           dbus-python-devel
           dbus-x11
           dconf-devel
           desktop-file-utils
           gettext-devel
           git
           gtk-doc
           gtk2-devel
           gtk3-devel
           gtk4-devel
           iso-codes-devel
           libdbusmenu-gtk3-devel
           libnotify-devel
           libtool
           python3-devel
           python3-gobject-devel
           systemd
           unicode-emoji
           unicode-ucd
           vala
           wayland-devel
         # for gtkdoc-fixxref
         FEDORA_PACKAGES_GTKDOC: >
           glib2-doc
         # for ibus-keypress
         FEDORA_PACKAGES_CI_KEY: >
           gnome-shell
           gnome-shell-extension-no-overview
           libXtst-devel
         # for gcc -fanalyzer -fsanitize=address -fsanitize=leak options
         # xkeyboard-config-devel to make ibus/engine/simle.xml.in
         FEDORA_PACKAGES_DISTRO: >
           libasan
           xkeyboard-config-devel
           patch
           strace

        run: |
          case "${{ matrix.container }}" in
          ubuntu*)
            cat /etc/lsb-release
            echo "apt-get update -qq -y"
            apt-get update -qq -y
            echo "apt-get install -q -y git"
            apt-get install -q -y git
            PACKAGES=$(echo "$UBUNTU_PACKAGES_AUTOGEN" | tr -d '\n')
            PACKAGES=$(echo "$PACKAGES $UBUNTU_PACKAGES_MAKE" | tr -d '\n')
            echo "apt-get install -y $PACKAGES"
            apt-get install -y $PACKAGES
            dpkg -l | grep unicode-data
            ;;
          fedora*)
            cat /etc/fedora-release
            DNF=dnf
            echo "$DNF -y update"
            $DNF -y update
            echo "$DNF -y install git which"
            $DNF -y install git which
            PACKAGES=$(echo "$FEDORA_PACKAGES_MAKE" | tr -d '\n')
            PACKAGES=$(echo "$PACKAGES $FEDORA_PACKAGES_GTKDOC" | tr -d '\n')
            PACKAGES=$(echo "$PACKAGES $FEDORA_PACKAGES_CI_KEY" | tr -d '\n')
            PACKAGES=$(echo "$PACKAGES $FEDORA_PACKAGES_DISTRO" | tr -d '\n')
            echo "$DNF -y install $PACKAGES"
            $DNF -y install $PACKAGES
            rpm -q gnome-shell
            V=$(rpm -q gnome-shell | sed -e 's/gnome-shell-\([0-9]*\)[.-~].*/\1/')
            grep $V /usr/share/gnome-shell/extensions/no-overview@fthx/metadata.json
            ;;
          *)
            echo "Not supported ${{ matrix.container }}"
            ls /etc/*release
            cat /etc/*release
            exit 1
            ;;
          esac
          pwd
          echo $GITHUB_WORKSPACE
          ls -a

      - uses: actions/checkout@v4
        with:
          #repository: ibus/ibus
          fetch-depth: 200

      - name: Fetch git tags
        run: |
          pwd
          id
          ls -al
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git branch
          git fetch --prune --unshallow --tags
          echo $PATH

      - name: Run autogen
        # configure options from
        # https://salsa.debian.org/debian/ibus/-/blob/master/debian/rules
        run: >
          ./autogen.sh
          --enable-gtk-doc
          --with-python=/usr/bin/python3
          --with-ucd-dir=${{ matrix.ucd_dir }}
          --enable-install-tests
          ${{ matrix.test_config }}

      - name: Run make
        # Set the cutom DESTDIR because the default DESTDIR
        # /home/travis/bulid/fujiwarat/$PKG/ibus/ibus-$VERSION/_inst seems to
        # be too long and failed to set DESTDIR to install
        # bindings/pygobject/IBus.py
        run: >
          export DISABLE_DAEMONIZE_IN_TESTS=1;
          make -j$(nproc) distcheck
          DISTCHECK_CONFIGURE_FLAGS="
          --enable-gtk-doc
          --disable-schemas-install
          --enable-memconf
          --with-python=/usr/bin/python3
          --with-ucd-dir=${{ matrix.ucd_dir }}
          --enable-install-tests
          ${{ matrix.test_config }}
          "
          DISABLE_GUI_TESTS="
          ibus-compose ibus-keypress test-stress xkb-latin-layouts
          "
          VERBOSE=1
          DESTDIR="$HOME/build/$USER/dest"

  ghdocs:
    runs-on: ubuntu-latest
    # if: github.event_name != 'pull_request' && github.event.ref == 'refs/heads/main'
    if: github.event_name != 'pull_request'
    # needs: [build]
    steps:
      - name: Install distro packages
        env:
         # For autogen.sh
         UBUNTU_PACKAGES_AUTOGEN: >
           autopoint
           strace
         # For make from
         # https://packages.ubuntu.com/search?searchon=sourcenames&keywords=ibus
         UBUNTU_PACKAGES_MAKE: >
           desktop-file-utils
           dbus-x11
           gobject-introspection
           gtk-doc-tools
           iso-codes
           libdconf-dev
           libdbusmenu-gtk3-dev
           libgirepository1.0-dev
           libglib2.0-dev
           libgtk-3-bin
           libgtk-3-dev
           libgtk-4-dev
           libgtk2.0-dev
           libnotify-dev
           libtool
           libwayland-dev
           python-gi-dev
           python3-all
           systemd
           unicode-cldr-core
           unicode-data
           valac
        run: |
          set -x
          sudo apt-get update -qq -y
          sudo apt-get install -q -y git
          PACKAGES=$(echo "$UBUNTU_PACKAGES_AUTOGEN" | tr -d '\n')
          PACKAGES=$(echo "$PACKAGES $UBUNTU_PACKAGES_MAKE" | tr -d '\n')
          sudo apt-get install -y $PACKAGES
          dpkg -l | grep unicode-data
      - uses: actions/checkout@v4
        with:
          #repository: ibus/ibus
          fetch-depth: 200
      - name: Run autogen
        run: |
          ./autogen.sh \
            --enable-gtk-doc \
            --with-python=/usr/bin/python3
      - name: Build docs
        run: |
          set -x
          make
          make -C docs/reference/ibus/
      - name: Commit docs to gh-pages branch
        working-directory: docs/reference/ibus/html
        run: |
          # Bypassing Jekyll on GitHub Pages
          touch .nojekyll
          REV=$(git rev-parse --short HEAD)
          git init
          git config user.name "Actions"
          git config user.email ""
          git add -A .
          # git add --renormalize .
          git commit -qm "Documentation for ${{github.repository}}@${REV}"
        shell: bash
      - name: Push gh-pages to GitHub
        working-directory: docs/reference/ibus/html
        run: |
          git remote add upstream https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push -q upstream HEAD:gh-pages --force
